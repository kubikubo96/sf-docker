version: "3.1"

services:

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    container_name: nginx
    tty: true
    volumes:
      - ${NGINX}
      - ${MICRO_A}
      - ${MICRO_B}
      - ${MICRO_C}
    depends_on:
      - micro-a
      - micro-b
      - micro-c

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq
    tty: true

  micro-a:
    image: micro-a
    build:
      args:
        user: kubikubo
        uid: 1000
      context: ./micro-a
      dockerfile: Dockerfile
    container_name: micro-a
    working_dir: /var/www/html/micro-a
    tty: true
    volumes:
      - ${MICRO_A}
      - ${MICRO_A_OVERRIDES}
    expose:
      - 9000

  micro-b:
    image: micro-b
    build:
      args:
        user: kubikubo
        uid: 1000
      context: ./micro-b
      dockerfile: Dockerfile
    container_name: micro-b
    working_dir: /var/www/html/micro-b
    tty: true
    volumes:
      - ${MICRO_B}
      - ${MICRO_B_OVERRIDES}
    expose:
      - 9000

  micro-c:
    image: micro-c
    build:
      args:
        user: kubikubo
        uid: 1000
      context: ./micro-c
      dockerfile: Dockerfile
    container_name: micro-c
    working_dir: /var/www/html/micro-c
    tty: true
    volumes:
      - ${MICRO_C}
      - ${MICRO_C_OVERRIDES}
    expose:
      - 9000

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    container_name: mysql
    tty: true
    volumes:
      - ${MYSQL}
      - ${MYSQL_MICRO_A}
      - ${MYSQL_MICRO_B}
      - ${MYSQL_MICRO_C}
    environment:
      MYSQL_DATABASE: kubikubo
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
    depends_on:
      - mysql-micro-a
      - mysql-micro-b
      - mysql-micro-c

  mysql-micro-a:
    image: mysql-micro-a
    ports:
      - "3301:3306"
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: mysql-micro-a
    working_dir: /var/www/html/mysql-micro-b
    tty: true
    volumes:
      - ${MYSQL_MICRO_A}
    environment:
      MYSQL_DATABASE: micro_a
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root

  mysql-micro-b:
    image: mysql-micro-b
    ports:
      - "3302:3306"
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: mysql-micro-b
    working_dir: /var/www/html/mysql-micro-b
    tty: true
    volumes:
      - ${MYSQL_MICRO_B}
    environment:
      MYSQL_DATABASE: micro_b
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root

  mysql-micro-c:
    image: mysql-micro-c
    ports:
      - "3303:3306"
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: mysql-micro-c
    working_dir: /var/www/html/mysql-micro-c
    tty: true
    volumes:
      - ${MYSQL_MICRO_C}
    environment:
      MYSQL_DATABASE: micro_c
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root